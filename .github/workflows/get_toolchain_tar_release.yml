# This is a basic workflow to help you get started with Actions

name: Get toolchain.tar and Create Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Get the toolchain tar file
        run: wget -nv -O toolchains.tar http://openwrt.kooiot.com/download/toolchains/v1.tar

      - name: Update Release
        # You may pin to the exact commit or the version.
        # uses: johnwbyrd/update-release@1d5ec4791e40507e5eca3b4dbf90f0b27e7e4979
        uses: johnwbyrd/update-release@v1.0.0
        with:
          # Your Github token; try \$\{\{ secrets.GITHUB_TOKEN \}\} if your build lasts less than an hour, or create your own secret token with repository access if your build requires longer than an hour.
          token: ${{ secrets.GITHUB_TOKEN }}
          # Paths to built files to be released. May be absolute or relative to \$\{\{ github.workspace \}\}.
          files: toolchains.tar
          # The name of the release to be created. A reasonable looking release name will be created from the current \$\{\{ github.ref \}\} if this input is not supplied.
          release: Toolchains
          # The name of the tag to be used. If not provided, the name of the release will be used.
          tag: toolchain_v1
          # A one-line description for both the tag and the release.
          message: Toolchains
          # A fuller description of the release.
          body: Toolchain Binary V1
          # Should the release, if created, be marked as a prerelease?  Such releases are generally publicly visible.
          prerelease: false
          # Should the release, if created, be marked as a draft?  Such releases are generally not publicly visible.
          draft: false
